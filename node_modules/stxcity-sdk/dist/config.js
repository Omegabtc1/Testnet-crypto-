"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MALICIOUS_TOKEN_MESSAGE = exports.configs = void 0;
exports.validateConfig = validateConfig;
const dotenv_1 = __importDefault(require("dotenv"));
dotenv_1.default.config();
exports.configs = {
    STXCITY_API_HOST: "",
    STACKS_NETWORK_API_HOST: "",
    HIRO_API_KEY: "",
};
function validateConfig() {
    const requiredEnvVars = [
        "STXCITY_API_HOST",
        "STACKS_NETWORK_API_HOST",
        "HIRO_API_KEY",
    ];
    for (const envVar of requiredEnvVars) {
        if (!exports.configs[envVar]) {
            console.error(`Missing required configuration: ${envVar}`);
            throw new Error(`Missing required configuration: ${envVar}`);
        }
    }
}
exports.MALICIOUS_TOKEN_MESSAGE = "Warning: This token is not a valid bonding curve token. It may be a scam or malicious token!";
//# sourceMappingURL=config.js.map